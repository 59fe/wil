#!/usr/bin/env node
'use strict';

const GC = require('../util/setGlobalConfig')
const qiniu = require("qiniu")
const path = require("path")
const co = require("co")
const exec = require('child-process-promise').exec
const dive = require("../util/dive")
qiniu.conf.ACCESS_KEY = 'xx'
qiniu.conf.SECRET_KEY = 'oo'


const deployDir = path.resolve(GC.deployDir)

let gen = function* () {
  const execRet = yield exec('git remote get-url origin')
  // 得到项目git仓库名
  const repoName = path.basename(execRet.stdout).replace(/.git.*\n/, '')

  function uptoken(bucket, key) {
    let putPolicy = new qiniu.rs.PutPolicy(bucket+":"+key);
    return putPolicy.token();
  }
  function uploadFile(uptoken, key, localFile) {
    var extra = new qiniu.io.PutExtra()
    qiniu.io.putFile(uptoken, key, localFile, extra, function(err, ret) {
      if(!err) {
        // 上传成功， 处理返回值
        console.log(ret.hash, ret.key, ret.persistentId);
      } else {
        // 上传失败， 处理返回代码
        console.log(err);
      }
    });
  }

  const bucket = 'fecdn'
  // 发布目录
  const deployDir = path.resolve(GC.deployDir)
  dive(deployDir, (err, fullPath) => {
    const pathAfterDeployDir = fullPath.split(deployDir + '/')[1]
    // 七牛 key
    const key = path.join('repo', repoName, pathAfterDeployDir)
    console.log(key)

    let token = uptoken(bucket, key)
    //调用uploadFile上传
    //uploadFile(token, key, fullPath)
  })

}
co(gen)
/*
co(gen).then(function (data){
  console.log('all done');
})
*/




